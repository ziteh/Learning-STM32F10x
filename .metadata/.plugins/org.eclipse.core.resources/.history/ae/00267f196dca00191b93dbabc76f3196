
#include <stdio.h>
#include <stdlib.h>
#include "stm32f10x.h"
//#include "diag/Trace.h"

//#include "led_init.h"
#include "delay.h"

void TIM2_PWM_Init(u16,u16);

//extern void SysTick_Init(void);
//extern void led_initi(void);

int main(void)
{
	u16 led0pwmval=0;
	u8 dir=1;
	SysTick_Init();	    	 //延时函数初始化
//	led_initi();		  	//初始化与LED连接的硬件接口
	TIM2_PWM_Init(899,0);//不分频。PWM频率=72000/(899+1)=80Khz
	while(1)
	{
		delay_ms(10);
		if(dir)
			led0pwmval++;
		else
			led0pwmval--;
		if(led0pwmval>300)
			dir=0;
		if(led0pwmval==0)
			dir=1;
		TIM_SetCompare3(TIM2,led0pwmval); // TIM2_CH3
	}
}


void TIM2_PWM_Init(u16 arr,u16 psc) //arr：自动重装值 ; psc：时钟预分频数
{
	GPIO_InitTypeDef GPIO_InitStructure;
	TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
	TIM_OCInitTypeDef  TIM_OCInitStructure;

	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);// 使能TIM2时钟
 	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB , ENABLE);  //使能GPIO外设时钟使能


   //设置该引脚为复用输出功能,输出TIM2 CH1的PWM脉冲波形
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10; //TIM_CH1
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;  //复用推挽输出
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
	GPIO_Init(GPIOB, &GPIO_InitStructure);


	TIM_TimeBaseStructure.TIM_Period = arr; //设置在下一个更新事件装入活动的自动重装载寄存器周期的值	 80K
	TIM_TimeBaseStructure.TIM_Prescaler =psc; //设置用来作为TIMx时钟频率除数的预分频值  不分频
	TIM_TimeBaseStructure.TIM_ClockDivision = 0; //设置时钟分割:TDTS = Tck_tim
	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  //TIM向上计数模式
	TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure); //根据TIM_TimeBaseInitStruct中指定的参数初始化TIMx的时间基数单位


	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM2; //选择定时器模式:TIM脉冲宽度调制模式2
	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable; //比较输出使能
	TIM_OCInitStructure.TIM_Pulse = 0; //设置待装入捕获比较寄存器的脉冲值
	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High; //输出极性:TIM输出比较极性高
	TIM_OC3Init(TIM2, &TIM_OCInitStructure);  //根据TIM_OCInitStruct中指定的参数初始化外设TIMx

	TIM_CtrlPWMOutputs(TIM2,ENABLE);	//MOE 主输出使能

	TIM_OC1PreloadConfig(TIM2, TIM_OCPreload_Enable);  //CH1预装载使能

	TIM_ARRPreloadConfig(TIM2, ENABLE); //使能TIMx在ARR上的预装载寄存器

	TIM_Cmd(TIM2, ENABLE);  //使能TIM2
}
